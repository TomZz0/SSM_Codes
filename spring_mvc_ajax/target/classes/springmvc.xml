<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--扫描组件-->
    <context:component-scan base-package="com.wzh"/>
    <!-- 配置Thymeleaf视图解析器 -->
    <bean id="viewResolver"
          class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean
                            class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">

<!--视图前缀+逻辑视图+视图后缀=完整的路径
localhost:8080/SpringMVC/WEB-INF/templates/由方法得到的逻辑视图.html
-->

                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
<!--开启mvc的注解驱动-->
    <mvc:annotation-driven/>
<!--配置视图控制器
    若只设置视图处理器 只有试图处理器配置的请求会被处理
    还要开启mvc的注解驱动 保证其他的请求被处理
-->
    <mvc:view-controller path="/" view-name="index"></mvc:view-controller>
<!--配置默认的Servlet来处理静态资源 DispatcherServlet的url-pattern是/
tomcat的web.xml中配置的DefaultServlet的url-pattern也是/
两者冲突 会优先被DispatcherServlet处理 而它不处理静态资源 所以需要设置
而设置完毕后所有请求就都会被DefaultServlet处理 就需要开启mvc的注解驱动
之后所有请求先由DispatcherServlet处理 处理不了的再由DefaultServlet处理
-->
    <mvc:default-servlet-handler/>
<!--配置文件上传解析器 添加依赖 设置id springMVC通过id获取解析器 而非类型-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    </bean>
</beans>