<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
<!--扫描组件-->
    <context:component-scan base-package="com.wzh.spring.aop.xml"></context:component-scan>
<!---->
    <aop:config>
<!--将IOC中的某个bean设置为切面 因为注解已经被扫描过了 所以会匹配到切面 id为类的小驼峰-->
        <aop:aspect ref="loggerAspect">
<!--    设置公共的切入点表达式        -->
            <aop:pointcut id="pointcut1" expression="execution(* com.wzh.spring.aop.xml.CalculatorImpl.*(..))"/>
<!--     将方法设置为通知       -->
            <aop:before method="beforeAdviceMethod" pointcut-ref="pointcut1"></aop:before>
            <aop:after method="afterAdviceMethod" pointcut-ref="pointcut1"></aop:after>
            <aop:after-returning method="afterReturningAdviceMethod" returning="result" pointcut-ref="pointcut1"></aop:after-returning>
            <aop:after-throwing method="afterThrowingAdviceMethod" throwing="exception" pointcut-ref="pointcut1"></aop:after-throwing>
            <aop:around method="aroundAdviceMethod" pointcut-ref="pointcut1"></aop:around>
        </aop:aspect>
        <aop:aspect ref="validateAspect">
            <aop:before method="beforeMethod" pointcut-ref="pointcut1"></aop:before>
        </aop:aspect>
    </aop:config>


</beans>